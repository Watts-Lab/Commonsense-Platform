name: Deploy To AWS EC2

on: 
  push:
    branches: [main]
  pull_request:
    branches: [main]


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_PROD_ID }}
        aws-secret-access-key: ${{ secrets.AWS_PROD_KEY }}
        aws-region: us-east-1

    - name: Create a env file to pass to docker
      run: |
        touch .env && rm .env
        touch .env
        echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
        echo NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }} >> .env
        echo NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} >> .env
        echo GOOGLE_ID=${{ secrets.GOOGLE_ID }} >> .env
        echo GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }} >> .env
        echo AWS_ID=${{ secrets.AWS_PROD_ID }} >> .env
        echo AWS_KEY=${{ secrets.AWS_PROD_KEY }} >> .env

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: commonsense
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Get Github action IP
      id: ip
      uses: haythem/public-ip@v1.2
    
    - name: Setting environment variables..
      run: |
        echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV
        echo "AWS_SG_NAME=Commonsense_Security_Group" >> $GITHUB_ENV
        
    - name: Add Github Actions IP to Security group
      run: |
        aws ec2 authorize-security-group-ingress --group-name ${{ env.AWS_SG_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32    
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PROD_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PROD_KEY }}
        AWS_DEFAULT_REGION: us-east-1
        
    - name: Deploy to prod server
      uses: appleboy/ssh-action@master
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      with:
        host: 44.196.91.156
        username: ec2-user 
        key: ${{ secrets.SERVER_KEY }}
        envs: ECR_REGISTRY
        script: |
          cd ~
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
          docker pull $ECR_REGISTRY/commonsense:latest
          pm2 restart  
          docker container prune -f
          docker image prune -f
    - name: Remove Github Actions IP from security group
      run: |
        aws ec2 revoke-security-group-ingress --group-name ${{ env.AWS_SG_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PROD_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PROD_KEY }}
        AWS_DEFAULT_REGION: us-east-1
        
      if: always()